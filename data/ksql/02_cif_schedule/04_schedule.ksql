SET 'auto.offset.reset' = 'earliest';

CREATE STREAM SCHEDULE_00 
   WITH (VALUE_FORMAT='AVRO', PARTITIONS=6) AS 
SELECT JsonScheduleV1->CIF_train_uid,
       JsonScheduleV1->schedule_start_date,
       JsonScheduleV1->CIF_stp_indicator,
       CONCAT_WS('/',
                 JsonScheduleV1->CIF_train_uid,
                 JsonScheduleV1->schedule_start_date,
                 JsonScheduleV1->CIF_stp_indicator) AS SCHEDULE_KEY,
       JsonScheduleV1->atoc_code,
       CASE
            WHEN JsonScheduleV1->train_status ='B' THEN 'Bus (Permanent)'
            WHEN JsonScheduleV1->train_status ='F' THEN 'Freight (Permanent - WTT)'
            WHEN JsonScheduleV1->train_status ='P' THEN 'Passenger & Parcels (Permanent - WTT)'
            WHEN JsonScheduleV1->train_status ='S' THEN 'Ship (Permanent)'
            WHEN JsonScheduleV1->train_status ='T' THEN 'Trip (Permanent)'
            WHEN JsonScheduleV1->train_status ='1' THEN 'STP Passenger & Parcels'
            WHEN JsonScheduleV1->train_status ='2' THEN 'STP Freight'
            WHEN JsonScheduleV1->train_status ='3' THEN 'STP Trip'
            WHEN JsonScheduleV1->train_status ='4' THEN 'STP Ship'
            WHEN JsonScheduleV1->train_status ='5' THEN 'STP Bus'
          END AS TRAIN_STATUS,
       CASE 
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'D' THEN 'Diesel'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'DEM' THEN 'Diesel Electric Multiple Unit'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'DMU' THEN 'Diesel Mechanical Multiple Unit'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'E' THEN 'Electric'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'ED' THEN 'Electro-Diesel'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'EML' THEN 'EMU plus D, E, ED locomotive'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'EMU' THEN 'Electric Multiple Unit'
            WHEN JsonScheduleV1->schedule_segment->CIF_power_type = 'HST' THEN 'High Speed Train'
          END AS POWER_TYPE,
       CASE 
            WHEN JsonScheduleV1->schedule_segment->CIF_train_class = 'B' OR JsonScheduleV1->schedule_segment->CIF_train_class = '' THEN 'First and standard' 
            WHEN JsonScheduleV1->schedule_segment->CIF_train_class = 'S'  THEN 'Standard only' 
          END AS SEATING_CLASSES,
       CASE 
          WHEN JsonScheduleV1->schedule_segment->CIF_reservations =  'A' THEN 'Reservations compulsory'
          WHEN JsonScheduleV1->schedule_segment->CIF_reservations =  'E' THEN 'Reservations for bicycles essential'
          WHEN JsonScheduleV1->schedule_segment->CIF_reservations =  'R' THEN 'Reservations recommended'
          WHEN JsonScheduleV1->schedule_segment->CIF_reservations =  'S' THEN 'Reservations possible from any station'
        END AS RESERVATIONS,
       CASE 
          WHEN JsonScheduleV1->schedule_segment->CIF_sleepers =   'B' THEN 'First and standard class'
          WHEN JsonScheduleV1->schedule_segment->CIF_sleepers =   'F' THEN 'First Class only'
          WHEN JsonScheduleV1->schedule_segment->CIF_sleepers =   'S' THEN 'Standard class only'
        END AS SLEEPING_ACCOMODATION,
       CASE 
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'OL' THEN 'Ordinary Passenger Trains: London Underground/Metro Service'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'OU' THEN 'Ordinary Passenger Trains: Unadvertised Ordinary Passenger'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'OO' THEN 'Ordinary Passenger Trains: Ordinary Passenger'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'OS' THEN 'Ordinary Passenger Trains: Staff Train'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'OW' THEN 'Ordinary Passenger Trains: Mixed'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XC' THEN 'Express Passenger Trains: Channel Tunnel'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XD' THEN 'Express Passenger Trains: Sleeper (Europe Night Services)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XI' THEN 'Express Passenger Trains: International'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XR' THEN 'Express Passenger Trains: Motorail'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XU' THEN 'Express Passenger Trains: Unadvertised Express'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XX' THEN 'Express Passenger Trains: Express Passenger'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'XZ' THEN 'Express Passenger Trains: Sleeper (Domestic)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'BR' THEN 'Buses & Ships: Bus – Replacement due to engineering work'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'BS' THEN 'Buses & Ships: Bus – WTT Service'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'SS' THEN 'Buses & Ships: Ship'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'EE' THEN 'Empty Coaching Stock Trains: Empty Coaching Stock (ECS)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'EL' THEN 'Empty Coaching Stock Trains: ECS, London Underground/Metro Service'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'ES' THEN 'Empty Coaching Stock Trains: ECS & Staff'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'JJ' THEN 'Parcels and Postal Trains: Postal'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'PM' THEN 'Parcels and Postal Trains: Post Office Controlled Parcels'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'PP' THEN 'Parcels and Postal Trains: Parcels'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'PV' THEN 'Parcels and Postal Trains: Empty NPCCS'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DD' THEN 'Departmental Trains: Departmental'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DH' THEN 'Departmental Trains: Civil Engineer'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DI' THEN 'Departmental Trains: Mechanical & Electrical Engineer'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DQ' THEN 'Departmental Trains: Stores'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DT' THEN 'Departmental Trains: Test'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'DY' THEN 'Departmental Trains: Signal & Telecommunications Engineer'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'ZB' THEN 'Light Locomotives: Locomotive & Brake Van'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'ZZ' THEN 'Light Locomotives: Light Locomotive'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J2' THEN 'Railfreight Distribution: RfD Automotive (Components)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H2' THEN 'Railfreight Distribution: RfD Automotive (Vehicles)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J3' THEN 'Railfreight Distribution: RfD Edible Products (UK Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J4' THEN 'Railfreight Distribution: RfD Industrial Minerals (UK Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J5' THEN 'Railfreight Distribution: RfD Chemicals (UK Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J6' THEN 'Railfreight Distribution: RfD Building Materials (UK Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J8' THEN 'Railfreight Distribution: RfD General Merchandise (UK Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H8' THEN 'Railfreight Distribution: RfD European'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'J9' THEN 'Railfreight Distribution: RfD Freightliner (Contracts)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H9' THEN 'Railfreight Distribution: RfD Freightliner (Other)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'A0' THEN 'Trainload Freight: Coal (Distributive)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'E0' THEN 'Trainload Freight: Coal (Electricity) MGR'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B0' THEN 'Trainload Freight: Coal (Other) and Nuclear'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B1' THEN 'Trainload Freight: Metals'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B4' THEN 'Trainload Freight: Aggregates'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B5' THEN 'Trainload Freight: Domestic and Industrial Waste'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B6' THEN 'Trainload Freight: Building Materials (TLF)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'B7' THEN 'Trainload Freight: Petroleum Products'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H0' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel (Mixed Business)'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H1' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel Intermodal'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H3' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel Automotive'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H4' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel Contract Services'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H5' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel Haulmark'
          WHEN JsonScheduleV1->schedule_segment->CIF_train_category =  'H6' THEN 'Railfreight Distribution (Channel Tunnel): RfD European Channel Tunnel Joint Venture'
        END AS TRAIN_CATEGORY,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[1],'$.tiploc_code')      as ORIGIN_TIPLOC_CODE,
        T_SRC.DESCRIPTION AS ORIGIN_DESCRIPTION,
        T_SRC.LAT_LON AS ORIGIN_LAT_LON,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[1],'$.public_departure') as ORIGIN_PUBLIC_DEPARTURE_TIME,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[1],'$.platform')         as ORIGIN_PLATFORM,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[-1],'$.tiploc_code')      as DESTINATION_TIPLOC_CODE,
        T_DST.DESCRIPTION AS DESTINATION_DESCRIPTION,
        T_DST.LAT_LON AS DESTINATION_LAT_LON,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[-1],'$.public_arrival') as DESTINATION_PUBLIC_ARRIVAL_TIME,
        extractjsonfield(JsonScheduleV1->schedule_segment->schedule_location[-1],'$.platform')         as DESTINATION_PLATFORM,
        ARRAY_LENGTH(JsonScheduleV1->schedule_segment->schedule_location) AS NUM_STOPS
FROM    CIF_SCHED C
  LEFT JOIN LOCATIONS T_SRC 
    ON EXTRACTJSONFIELD(JsonScheduleV1->schedule_segment->schedule_location[1],'$.tiploc_code') 
     = T_SRC.TIPLOC
  LEFT JOIN LOCATIONS_DUP T_DST 
    ON EXTRACTJSONFIELD(JsonScheduleV1->schedule_segment->schedule_location[-1],'$.tiploc_code') 
     = T_DST.TIPLOC
PARTITION BY CONCAT_WS('/',
                       JsonScheduleV1->CIF_train_uid,
                       JsonScheduleV1->schedule_start_date,
                       JsonScheduleV1->CIF_stp_indicator);
