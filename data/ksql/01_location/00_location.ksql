CREATE STREAM LOCATIONS_RAW WITH 
  (KAFKA_TOPIC='ukrail-locations', FORMAT='AVRO');

SET 'auto.offset.reset' = 'earliest';

CREATE TABLE LOCATIONS WITH (PARTITIONS=6) AS 
  SELECT  TIPLOC,
          LATEST_BY_OFFSET(NAME) AS NAME,
          LATEST_BY_OFFSET(DESCRIPTION) AS DESCRIPTION,
          LATEST_BY_OFFSET(LOCATION_ID) AS LOCATION_ID,
          LATEST_BY_OFFSET(CRS) AS CRS,
          LATEST_BY_OFFSET(NLC) AS NLC,
          LATEST_BY_OFFSET(STANOX) AS STANOX,
          LATEST_BY_OFFSET(NOTES) AS NOTES,
          CASE
            WHEN LATEST_BY_OFFSET(LATITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            WHEN LATEST_BY_OFFSET(LONGITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            ELSE STRUCT("lat":=CAST(LATEST_BY_OFFSET(LATITUDE) AS DOUBLE),
                        "lon":=CAST(LATEST_BY_OFFSET(LONGITUDE) AS DOUBLE))
          END AS LAT_LON,
          LATEST_BY_OFFSET(ISOFFNETWORK) AS ISOFFNETWORK,
          LATEST_BY_OFFSET(TIMINGPOINTTYPE) AS TIMINGPOINTTYPE
          FROM LOCATIONS_RAW
          GROUP BY TIPLOC;

-- We need a duplicate table so that
-- we can do an n-way join later on
-- c.f. https://github.com/confluentinc/ksql/issues/6484
CREATE TABLE LOCATIONS_DUP WITH (PARTITIONS=6) AS 
  SELECT  TIPLOC,
          LATEST_BY_OFFSET(NAME) AS NAME,
          LATEST_BY_OFFSET(DESCRIPTION) AS DESCRIPTION,
          LATEST_BY_OFFSET(LOCATION_ID) AS LOCATION_ID,
          LATEST_BY_OFFSET(CRS) AS CRS,
          LATEST_BY_OFFSET(NLC) AS NLC,
          LATEST_BY_OFFSET(STANOX) AS STANOX,
          LATEST_BY_OFFSET(NOTES) AS NOTES,
          CASE
            WHEN LATEST_BY_OFFSET(LATITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            WHEN LATEST_BY_OFFSET(LONGITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            ELSE STRUCT("lat":=CAST(LATEST_BY_OFFSET(LATITUDE) AS DOUBLE),
                        "lon":=CAST(LATEST_BY_OFFSET(LONGITUDE) AS DOUBLE))
          END AS LAT_LON,
          LATEST_BY_OFFSET(ISOFFNETWORK) AS ISOFFNETWORK,
          LATEST_BY_OFFSET(TIMINGPOINTTYPE) AS TIMINGPOINTTYPE
          FROM LOCATIONS_RAW
          GROUP BY TIPLOC;
          
CREATE TABLE LOCATIONS_BY_STANOX WITH (PARTITIONS=6) AS 
  SELECT  STANOX,
          LATEST_BY_OFFSET(NAME) AS NAME,
          LATEST_BY_OFFSET(DESCRIPTION) AS DESCRIPTION,
          LATEST_BY_OFFSET(LOCATION_ID) AS LOCATION_ID,
          LATEST_BY_OFFSET(CRS) AS CRS,
          LATEST_BY_OFFSET(NLC) AS NLC,
          LATEST_BY_OFFSET(TIPLOC) AS TIPLOC,
          LATEST_BY_OFFSET(NOTES) AS NOTES,
          CASE
            WHEN LATEST_BY_OFFSET(LATITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            WHEN LATEST_BY_OFFSET(LONGITUDE) is null  THEN CAST(NULL AS STRUCT<`lat` DOUBLE, `lon` DOUBLE>)
            ELSE STRUCT("lat":=CAST(LATEST_BY_OFFSET(LATITUDE) AS DOUBLE),
                        "lon":=CAST(LATEST_BY_OFFSET(LONGITUDE) AS DOUBLE))
          END AS LAT_LON,
          LATEST_BY_OFFSET(ISOFFNETWORK) AS ISOFFNETWORK,
          LATEST_BY_OFFSET(TIMINGPOINTTYPE) AS TIMINGPOINTTYPE
          FROM LOCATIONS_RAW
          GROUP BY STANOX;